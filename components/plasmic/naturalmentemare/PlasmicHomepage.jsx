// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oim27Bu1ThuTn7RkGgxh5P
// Component: of49UJebE91W
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button2 from "../../Button2"; // plasmic-import: Yp4SbBaPO1b8/component
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { datePickerHelpers as AntdDatePicker_Helpers } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { AntdTooltip } from "@plasmicpkgs/antd5/skinny/registerTooltip";
import { AntdInputNumber } from "@plasmicpkgs/antd5/skinny/registerInput";
import { useScreenVariants as useScreenVariantsith9ZDalCwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Ith9ZDalCw-V/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oim27Bu1ThuTn7RkGgxh5P/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: of49UJebE91W/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: K_XxEM7Q4cIW/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: S_tcS_gFiIGf/icon
import Whatsapp128SvgrepoComsvgIcon from "./icons/PlasmicIcon__Whatsapp128SvgrepoComsvg"; // plasmic-import: FR01N8LietG4/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: FzYesm_3GL7h/icon
import InstagramSvgrepoComsvgIcon from "./icons/PlasmicIcon__InstagramSvgrepoComsvg"; // plasmic-import: Ykw0IS2_E4Wg/icon
import TiktokSvgrepoComsvgIcon from "./icons/PlasmicIcon__TiktokSvgrepoComsvg"; // plasmic-import: -HYOxdp1gh1y/icon
import MailAlt3SvgrepoComsvgIcon from "./icons/PlasmicIcon__MailAlt3SvgrepoComsvg"; // plasmic-import: lxw0LriFgpMb/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textbox6.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox7.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "dateTimePicker.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "dateTimePicker2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,
        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "numberInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "numberInput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsith9ZDalCwV()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <section className={classNames(projectcss.all, sty.section__vfP5X)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vXxa7)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__htMu)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__sLjsy)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__lgQbe)}
                      role={"img"}
                    />
                  }
                  link={`/`}
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__o6Jy)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__yUh0T)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    onClick={async event => {
                      const $steps = {};
                      $steps["goToHomepage"] = true
                        ? (() => {
                            const actionArgs = { destination: `/` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToHomepage"] != null &&
                        typeof $steps["goToHomepage"] === "object" &&
                        typeof $steps["goToHomepage"].then === "function"
                      ) {
                        $steps["goToHomepage"] = await $steps["goToHomepage"];
                      }
                    }}
                    src={{
                      src: "/plasmic/naturalmentemare/images/fishingBoatBlackSilhouetteSmallShipsInFlatDesignKidToyStyleIllustrationOnWhiteBackgroundVectorRemovebgPreviewpng.png",
                      fullWidth: 500,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wxoJq
                    )}
                  >
                    {""}
                  </div>
                </Button2>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hpj42)}
                >
                  <Button2
                    className={classNames("__wab_instance", sty.button2__bloNb)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ekHen)}
                        role={"img"}
                      />
                    }
                    link={`/`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__iak7)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iUcK0
                      )}
                    >
                      {"Home"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__d1Kv4)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ohUzc)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__dLav)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ofbts
                      )}
                    >
                      {"Eventi"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__dSvF0)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__faOM)}
                        role={"img"}
                      />
                    }
                    link={`/team`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__rS2Jx)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r4Xwf
                      )}
                    >
                      {"Chi siamo"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__goDnz)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__tgPs1)}
                        role={"img"}
                      />
                    }
                    link={`/contatti`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__fla5A)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ylLga
                      )}
                    >
                      {"Contattaci"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__v7Rel)}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__hEzzm)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__biY6N)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jxNx
                      )}
                    >
                      {"Sign up"}
                    </div>
                  </Button2>
                </Stack__>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kLdL)}
                  >
                    <button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__dVzN
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__hcBS)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__hl5Jx)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__o2A7P
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                  </div>
                ) : null}
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__oaw4K
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  platform={"nextjs"}
                >
                  {""}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mvckM
                  )}
                  component={Link}
                  href={"https://wa.me/3758002079"}
                  platform={"nextjs"}
                  target={"_blank"}
                >
                  <Whatsapp128SvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__u1LJ8)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yOXft
                    )}
                  >
                    {" Scrivici su Whatsapp!"}
                  </div>
                </PlasmicLink__>
              </Stack__>
            </Stack__>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox___15Yaa)}>
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___0TpLh)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vYv04
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecoration: "underline" }}
                    >
                      {"Una nuova realt\u00e0"}
                    </span>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nlEbe
                  )}
                >
                  {"Siamo dei marinai arghhh!!\nOfferta grossa "}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mQ3Vi)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__bg0Zy)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__mSc76)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__cugSp)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kcJfe
                    )}
                  >
                    {"Prenota ora"}
                  </div>
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2__gmyPy)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__ibOYg)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__jrj6T)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__trA3
                    )}
                  >
                    {"Learn more\u2026"}
                  </div>
                </Button2>
              </Stack__>
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__kagCg)}
          >
            <div className={classNames(projectcss.all, sty.columns__jwkiQ)}>
              <div className={classNames(projectcss.all, sty.column__uoQgI)}>
                <div
                  data-plasmic-name={"background2"}
                  data-plasmic-override={overrides.background2}
                  className={classNames(projectcss.all, sty.background2)}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ftXwy)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"320px"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/naturalmentemare/images/p1010861Jpg.jpg",
                    fullWidth: 1920,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />

                <section
                  className={classNames(projectcss.all, sty.section__jRp2U)}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___5TFzg)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dZ93)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copy"}
                    data-plasmic-override={overrides.copy}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xy71J)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xV6C8
                        )}
                      >
                        {"ATTIVITA ESTIVE 2024"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tLQeg
                        )}
                      >
                        {"Esplora con noi il Gargano"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__afYDi
                        )}
                      >
                        {
                          "Prendi in mano il timone e scopri questa magnifica terra ricca di storie e tradizioni.\nUn vasto programma didattico dedicato ai nostri soci, adatto e coinvolgente per tutti.\nIl pacchetto contiene:\n\u25b8 Alloggio nel borgo medievale di Vieste\n\u25b8 Un programma vasto e personalizzabile\n\u25b8 Assicurazione e Tesseramento per l\u2019anno\n\u25b8 Il nostro Team a vostra disposizione"
                        }
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pm5Q9)}
                    >
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__eg9Z4
                        )}
                        color={"blue"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kNf8G
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(projectcss.all, sty.svg__sTj)}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__n6Wko
                          )}
                        >
                          {"Inizia ora"}
                        </div>
                      </Button2>
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__rN14X
                        )}
                        color={"clear"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nuKad
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__l1H2G
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zco0N
                          )}
                        >
                          {"Scopri di pi\u00f9..."}
                        </div>
                      </Button2>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bvTzo)}
          >
            <div className={classNames(projectcss.all, sty.columns__aecEu)}>
              <div className={classNames(projectcss.all, sty.column__u851C)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__b5WTx)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copy3"}
                    data-plasmic-override={overrides.copy3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy3)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dCd2Q)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dr2PK
                        )}
                      >
                        {"LE NOSTRE BARCHE"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2D6ZX
                        )}
                      >
                        {"SHIRANAMI E DIVA"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gkwMi
                        )}
                      >
                        {
                          "Abbiamo due barche e sono \ngrosse\nacqua\naaaaaaaaaaaaaa\naa\na\na\n"
                        }
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bLbjp)}
                    >
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__pAvPp
                        )}
                        color={"clear"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fmMwz
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__a99Ve
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__n4Bag
                          )}
                        >
                          {"Scopri di pi\u00f9..."}
                        </div>
                      </Button2>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__mwB8Q)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bkct)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"320px"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={{
                    src: "/plasmic/naturalmentemare/images/slide4Jpg.jpg",
                    fullWidth: 1920,
                    fullHeight: 1080,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__mjhiD)}>
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground4"}
              data-plasmic-override={overrides.foreground4}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground4)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vClUm)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qFo9D
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ textDecoration: "underline" }}
                    >
                      {"Prenota gi\u00e0 da ora:"}
                    </span>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vDriq
                  )}
                >
                  {
                    "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dRi7)}
              >
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.dateTimePicker),
                    onChange: generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["dateTimePicker", "value"],
                      AntdDatePicker_Helpers
                    ),
                    popupClassName: classNames({
                      [sty["pcls_YF43Wa0QWiQQ"]]: true
                    }),
                    popupScopeClassName: sty["dateTimePicker__datePickerPopup"],
                    value: generateStateValueProp($state, [
                      "dateTimePicker",
                      "value"
                    ])
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "dateTimePicker.value"
                      }
                    ],

                    [],
                    AntdDatePicker_Helpers ?? {},
                    child$Props
                  );
                  return (
                    <AntdDatePicker
                      data-plasmic-name={"dateTimePicker"}
                      data-plasmic-override={overrides.dateTimePicker}
                      {...child$Props}
                    />
                  );
                })()}
                {(() => {
                  const child$Props = {
                    className: classNames(
                      "__wab_instance",
                      sty.dateTimePicker2
                    ),
                    onChange: generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["dateTimePicker2", "value"],
                      AntdDatePicker_Helpers
                    ),
                    popupScopeClassName:
                      sty["dateTimePicker2__datePickerPopup"],
                    value: generateStateValueProp($state, [
                      "dateTimePicker2",
                      "value"
                    ])
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "dateTimePicker2.value"
                      }
                    ],

                    [],
                    AntdDatePicker_Helpers ?? {},
                    child$Props
                  );
                  return (
                    <AntdDatePicker
                      data-plasmic-name={"dateTimePicker2"}
                      data-plasmic-override={overrides.dateTimePicker2}
                      {...child$Props}
                    />
                  );
                })()}
                <AntdTooltip
                  className={classNames("__wab_instance", sty.tooltip__cmKjs)}
                  titleText={"Palle"}
                >
                  <AntdInputNumber
                    data-plasmic-name={"numberInput"}
                    data-plasmic-override={overrides.numberInput}
                    allowClear={true}
                    className={classNames("__wab_instance", sty.numberInput)}
                    controls={true}
                    onChange={generateStateOnChangeProp($state, [
                      "numberInput",
                      "value"
                    ])}
                    placeholder={"Adulti"}
                    type={"number"}
                    value={generateStateValueProp($state, [
                      "numberInput",
                      "value"
                    ])}
                  />
                </AntdTooltip>
                <AntdTooltip
                  className={classNames("__wab_instance", sty.tooltip__b6EGs)}
                  titleText={"Da 0 a 13 anni"}
                >
                  <AntdInputNumber
                    data-plasmic-name={"numberInput2"}
                    data-plasmic-override={overrides.numberInput2}
                    className={classNames("__wab_instance", sty.numberInput2)}
                    onChange={generateStateOnChangeProp($state, [
                      "numberInput2",
                      "value"
                    ])}
                    placeholder={"Bambini"}
                    type={"number"}
                    value={generateStateValueProp($state, [
                      "numberInput2",
                      "value"
                    ])}
                  />
                </AntdTooltip>
                <Button2
                  className={classNames("__wab_instance", sty.button2___09KTg)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__lcVmf)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__uJudG)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l8Dnh
                    )}
                  >
                    {"Inizia prenotazione"}
                  </div>
                </Button2>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___27Nxw)}>
            <div className={classNames(projectcss.all, sty.freeBox___4An5J)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__maVmn)}
              >
                <div className={classNames(projectcss.all, sty.column__susz3)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___5RUvn)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jSlkf)}
                      displayHeight={"40px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"40px"}
                      src={{
                        src: "/plasmic/naturalmentemare/images/fishingBoatBlackSilhouetteSmallShipsInFlatDesignKidToyStyleIllustrationOnWhiteBackgroundVectorRemovebgPreviewpng.png",
                        fullWidth: 500,
                        fullHeight: 500,
                        aspectRatio: undefined
                      }}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sxuuj)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b4Ou2
                        )}
                      >
                        {"Seguici sui nostri social!"}
                      </div>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lBLd
                        )}
                      >
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__huDuO)}
                          role={"img"}
                        />

                        <InstagramSvgrepoComsvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3EHpR
                          )}
                          role={"img"}
                        />

                        <TiktokSvgrepoComsvgIcon
                          className={classNames(projectcss.all, sty.svg__fhE3V)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__g14MY
                    )}
                  >
                    {"Contatti"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yCz1E)}
                  >
                    <MailAlt3SvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__qZzdO)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d4Xat
                      )}
                    >
                      {"naturalmentemare@gmail.com"}
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__h8R5)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__k82B0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dRv7G
                      )}
                    >
                      {"Product"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__igNiB
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__fhkql)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__dFniY)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cykCj
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__xCsUd
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__cKk6N)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__t3)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__p0Csw
                        )}
                      >
                        {"Integrations"}
                      </div>
                    </Button2>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__f4Gqp
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__bufGj)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__xoBYr)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vl2Sy
                        )}
                      >
                        {"Insights"}
                      </div>
                    </Button2>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___1Sv1C)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fvGb2)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3Th1D
                      )}
                    >
                      {"Support"}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__upzQi
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__boHnQ)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__koKxk)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0DyA
                        )}
                      >
                        {"Pricing"}
                      </div>
                    </Button2>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ecsgh)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nUGhW)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"foreground3"}
                      data-plasmic-override={overrides.foreground3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.foreground3)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hm1L3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kLbe7
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__izwwK
                            )}
                          >
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___05CP
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__nGyi2
                                )}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__n4P19
                                )}
                              >
                                {"Scrivici"}
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__gePs2
                                )}
                              />
                            </Stack__>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__p78Pz
                              )}
                            >
                              <input
                                data-plasmic-name={"textbox6"}
                                data-plasmic-override={overrides.textbox6}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textbox6
                                )}
                                onChange={e => {
                                  generateStateOnChangeProp($state, [
                                    "textbox6",
                                    "value"
                                  ])(e.target.value);
                                }}
                                placeholder={"Nome"}
                                ref={ref => {
                                  $refs["textbox6"] = ref;
                                }}
                                size={1}
                                type={"text"}
                                value={
                                  generateStateValueProp($state, [
                                    "textbox6",
                                    "value"
                                  ]) ?? ""
                                }
                              />

                              <input
                                data-plasmic-name={"textbox4"}
                                data-plasmic-override={overrides.textbox4}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.input,
                                  sty.textbox4
                                )}
                                onChange={e => {
                                  generateStateOnChangeProp($state, [
                                    "textbox4",
                                    "value"
                                  ])(e.target.value);
                                }}
                                placeholder={"Email"}
                                ref={ref => {
                                  $refs["textbox4"] = ref;
                                }}
                                size={1}
                                type={"email"}
                                value={
                                  generateStateValueProp($state, [
                                    "textbox4",
                                    "value"
                                  ]) ?? ""
                                }
                              />

                              <textarea
                                data-plasmic-name={"textbox7"}
                                data-plasmic-override={overrides.textbox7}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.textarea,
                                  sty.textbox7
                                )}
                                onChange={e => {
                                  generateStateOnChangeProp($state, [
                                    "textbox7",
                                    "value"
                                  ])(e.target.value);
                                }}
                                placeholder={"Messaggio"}
                                ref={ref => {
                                  $refs["textbox7"] = ref;
                                }}
                                rows={4}
                                value={
                                  generateStateValueProp($state, [
                                    "textbox7",
                                    "value"
                                  ]) ?? ""
                                }
                              />
                            </Stack__>
                            <Button2
                              className={classNames(
                                "__wab_instance",
                                sty.button2___1X2Tw
                              )}
                              endIcon={
                                <Icon38Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___8NM9Y
                                  )}
                                  role={"img"}
                                />
                              }
                              startIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__e2DCh
                                  )}
                                  role={"img"}
                                />
                              }
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jMv1Y
                                )}
                              >
                                {"Invia"}
                              </div>
                            </Button2>
                          </Stack__>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ubHoF
                            )}
                          />
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "button",
    "foreground2",
    "background2",
    "copy",
    "copy3",
    "foreground4",
    "dateTimePicker",
    "dateTimePicker2",
    "numberInput",
    "numberInput2",
    "foreground3",
    "textbox6",
    "textbox4",
    "textbox7"
  ],

  button: ["button"],
  foreground2: ["foreground2"],
  background2: ["background2"],
  copy: ["copy"],
  copy3: ["copy3"],
  foreground4: [
    "foreground4",
    "dateTimePicker",
    "dateTimePicker2",
    "numberInput",
    "numberInput2"
  ],

  dateTimePicker: ["dateTimePicker"],
  dateTimePicker2: ["dateTimePicker2"],
  numberInput: ["numberInput"],
  numberInput2: ["numberInput2"],
  foreground3: ["foreground3", "textbox6", "textbox4", "textbox7"],
  textbox6: ["textbox6"],
  textbox4: ["textbox4"],
  textbox7: ["textbox7"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    button: makeNodeComponent("button"),
    foreground2: makeNodeComponent("foreground2"),
    background2: makeNodeComponent("background2"),
    copy: makeNodeComponent("copy"),
    copy3: makeNodeComponent("copy3"),
    foreground4: makeNodeComponent("foreground4"),
    dateTimePicker: makeNodeComponent("dateTimePicker"),
    dateTimePicker2: makeNodeComponent("dateTimePicker2"),
    numberInput: makeNodeComponent("numberInput"),
    numberInput2: makeNodeComponent("numberInput2"),
    foreground3: makeNodeComponent("foreground3"),
    textbox6: makeNodeComponent("textbox6"),
    textbox4: makeNodeComponent("textbox4"),
    textbox7: makeNodeComponent("textbox7"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oim27Bu1ThuTn7RkGgxh5P
// Component: _eHWE4BWyqEM
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button2 from "../../Button2"; // plasmic-import: Yp4SbBaPO1b8/component
import { useScreenVariants as useScreenVariantsith9ZDalCwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Ith9ZDalCw-V/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oim27Bu1ThuTn7RkGgxh5P/projectcss
import sty from "./PlasmicHomepage2.module.css"; // plasmic-import: _eHWE4BWyqEM/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: K_XxEM7Q4cIW/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: S_tcS_gFiIGf/icon
import Whatsapp128SvgrepoComsvgIcon from "./icons/PlasmicIcon__Whatsapp128SvgrepoComsvg"; // plasmic-import: FR01N8LietG4/icon

createPlasmicElementProxy;

export const PlasmicHomepage2__VariantProps = new Array();

export const PlasmicHomepage2__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage2__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsith9ZDalCwV()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage2.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage2.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage2.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pdU7H)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__l0Zyb)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__k5Onj)}
                  displayHeight={"60px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"60px"}
                  src={{
                    src: "/plasmic/naturalmentemare/images/fishingBoatBlackSilhouetteSmallShipsInFlatDesignKidToyStyleIllustrationOnWhiteBackgroundVectorRemovebgPreviewpng.png",
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__l5SG1)}
                >
                  <Button2
                    className={classNames("__wab_instance", sty.button2__xzb0)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__cOljz)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__fFp7K)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___67I8S
                      )}
                    >
                      {"Home"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__smnNh)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__disD1)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__kBcDn)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wgfK
                      )}
                    >
                      {"Eventi"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__mgUqa)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___1Br0E)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__mXiS)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uZmx2
                      )}
                    >
                      {"Chi siamo"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___8BPk6
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__b5M5)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__doGsk)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bgZoq
                      )}
                    >
                      {"Contattaci"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__jqNg)}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___4CvF)}
                        role={"img"}
                      />
                    }
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__giVnX)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1FKe6
                      )}
                    >
                      {"Sign up"}
                    </div>
                  </Button2>
                </Stack__>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sl1Jj)}
                  >
                    <button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__i5Waj
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9GTtu
                          )}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6UtBr
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x2CjQ
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                  </div>
                ) : null}
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__btdDk
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  platform={"nextjs"}
                >
                  {""}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__ewIrl
                  )}
                  component={Link}
                  href={"https://wa.me/3758002079"}
                  platform={"nextjs"}
                >
                  <Whatsapp128SvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__rLzrT)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tSjXo
                    )}
                  >
                    {" Scrivici su Whatsapp!"}
                  </div>
                </PlasmicLink__>
              </Stack__>
            </Stack__>
          </section>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__tejrJ)}
          >
            <div className={classNames(projectcss.all, sty.columns__aXPyB)}>
              <div className={classNames(projectcss.all, sty.column___0OJni)} />
              <div className={classNames(projectcss.all, sty.column__ktjLl)} />
            </div>
          </Stack__>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ibHl7
            )}
          >
            {
              "https://plasmic-ray.s3-us-west-2.amazonaws.com/it-call-to-action-section-2.png"
            }
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__jjRt2)}
          >
            <div className={classNames(projectcss.all, sty.columns___23Ne)}>
              <div className={classNames(projectcss.all, sty.column__uiBbq)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__nEqg1)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copy"}
                    data-plasmic-override={overrides.copy}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gPwBh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jgMcu
                        )}
                      >
                        {"Welcome"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5IIkt
                        )}
                      >
                        {"Il nostro Team"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iw8Du
                        )}
                      >
                        {
                          "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                        }
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vrx9U)}
                    />
                  </Stack__>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__jTm9)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__rNlMa)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"320px"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={
                    "https://images.unsplash.com/photo-1520333789090-1afc82db536a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2851&q=80"
                  }
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox___80Utt)}
                />
              </div>
            </div>
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "section", "button", "copy"],
  section: ["section", "button"],
  button: ["button"],
  copy: ["copy"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage2__ArgProps,
          internalVariantPropNames: PlasmicHomepage2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage2";
  } else {
    func.displayName = `PlasmicHomepage2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage2 = Object.assign(
  // Top-level PlasmicHomepage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    button: makeNodeComponent("button"),
    copy: makeNodeComponent("copy"),
    // Metadata about props expected for PlasmicHomepage2
    internalVariantProps: PlasmicHomepage2__VariantProps,
    internalArgProps: PlasmicHomepage2__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Team",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage2;
/* prettier-ignore-end */
